{"version":3,"file":"hub-main-ce71743b.js","sources":["../../src/hub-main.ts"],"sourcesContent":["/// <reference types=\"@workadventure/iframe-api-typings\" />\nimport { bootstrapExtra } from \"@workadventure/scripting-api-extra\";\nimport { getChatAreas } from \"./chatArea\";\nimport { levelUp, quests } from \"./quests\";\nimport { checkPlayerMaterial, mySound, playRandomSound } from \"./footstep\";\n\nWA.onInit().then(async () => {\n    console.log('loading main.ts');\n    WA.controls.disableInviteButton();\n    WA.controls.disableMapEditor();\n    WA.controls.disableRoomList();\n    // Initialize the first quest if not already set\n \n    try {\n        // Initialize the Scripting API Extra\n        await bootstrapExtra();\n        console.log('Scripting API Extra ready');\n    } catch (e) {\n        console.error(e);\n    }});\n    WA.onInit().then(() => {\n        WA.room.area.onLeave(\"toMatrix\").subscribe(() => {\n            if (WA.player.state.currentQuest === \"quest6\") {\n                WA.player.state.currentQuest = \"quest7\";\n            }\n        });\n       \n    });\n\n // Event listener for player movement to play footstep sounds\n    WA.player.onPlayerMove(async ({ x, y, moving }) => {\n        const material = await checkPlayerMaterial({ x, y });\n        if (!material) {\n            mySound?.stop();\n            return;\n        }\n\n        if (!moving && !material) {\n            mySound?.stop();\n            return;\n        } else {\n            mySound?.stop();\n            playRandomSound(material);\n        }\n    });\n\n\n\nWA.onInit().then(async () => {\n    // Get chat areas and set up event listeners for entering and leaving them\n    const chatAreas = await getChatAreas();\n    for (const area of chatAreas) {\n        let triggerMessage: any;\n        let playerName: string = WA.player.name;\n        console.log(\"Player name:\", playerName);\n        // When player enters a chat area\n        WA.room.area.onEnter(area.name).subscribe(() => {\n            triggerMessage = WA.ui.displayActionMessage({\n                message: `[LEERTASTE] drücken um mit ${area.npcName} zu sprechen.`,\n                callback: () => {\n\n                    \n                    WA.chat.sendChatMessage(area.chatText.replace(\"{NameOfPlayer}\", playerName),area.npcName);\n                    if (area.triggerQuest) {\n                        const currentQuest = WA.player.state.currentQuest;\n                        const requiredQuest = quests.find((q: { questId: string }) => q.questId === area.triggerQuest)?.requireQuest;\n                        if (currentQuest === requiredQuest) {\n                            WA.player.state.currentQuest = area.triggerQuest;\n                        }\n                    }\n                }\n            });\n            WA.room.area.onLeave(area.name).subscribe(() => {WA.chat.close();});\n        \n        });\n\n        // When player leaves a chat area\n        WA.room.area.onLeave(area.name).subscribe(() => {\n            if (triggerMessage) {\n                triggerMessage.remove();\n                WA.chat.close();\n            }\n        });\n    }\n\n    // Display the current quest banner if a quest is active\n    const currentQuestId = WA.player.state.currentQuest;\n    const currentQuest = quests.find((q: { questId: string }) => q.questId === currentQuestId);\n    if (currentQuest) {\n        createQuestBanner(currentQuest.questId);\n    }\n\n    // Event listener for changes in the current quest\n    WA.player.state.onVariableChange('currentQuest').subscribe((newQuestId) => {\n        const newQuest = quests.find((q: { questId: string }) => q.questId === newQuestId);\n        if (newQuest) {\n            createQuestBanner(newQuest.questId);\n        }\n    });\n\n    // Function to create a quest banner\n    function createQuestBanner(questId: string) {\n        const quest = quests.find((q: { questId: string }) => q.questId === questId);\n        if (quest) {\n            WA.ui.banner.openBanner({\n                id: quest.questId,\n                text: quest.questDescription,\n                timeToClose: 0,\n                bgColor: '#1B1B29',\n                textColor: '#FFFFFF',\n                closable: false\n            });\n        }\n    }\n});\n\nWA.onInit().then(async () => {\n    if (WA.player.state.module2 === '2' && WA.player.state.module3 === '2') {\n        // When both modules are solved, prompt the user and listen for their answer in chat.\n        WA.room.area.onEnter(\"finalCodeTerminal\").subscribe(() => {\n            let actionMessage: any;\n\n            actionMessage = WA.ui.displayActionMessage({\n                message: `[LEERTASTE] drücken um mit dem Terminal zu interagieren.`,\n                callback: () => {\n                    WA.chat.sendChatMessage(\n                        \"Du kannst jetzt den Sicherheitscode eingeben. Schreibe die richtigen Begriffe in den Chat.\",\n                        \"Zirze\"\n                    );\n\n                    WA.chat.onChatMessage(\n                        async (message, event) => {\n                            // Check if the message is coming from the local user\n                            if (event.authorId === undefined) {\n                                const lowerMsg = message.toLowerCase();\n                                if (\n                                    lowerMsg.includes(\"wissenschaft\") &&\n                                    lowerMsg.includes(\"wissenssammlung\") &&\n                                    lowerMsg.includes(\"art\") &&\n                                    lowerMsg.includes(\"denken\")\n                                ) {\n                                    WA.chat.sendChatMessage(\n                                        \" 🌟 **Alles korrekt** 🌟\\n\\nIch teleportiere dich nun zurück zu **Prof. Mumblecore**. Er wird sich sehr freuen, dich wiederzusehen! 🎉\",\n                                        \"Zirze\"\n                                    );\n                                    await new Promise((resolve) =>\n                                        setTimeout(resolve, 4000)\n                                    );\n                                    WA.player.state.currentQuest = \"quest27\";\n                                    levelUp(\"notlog\", 177);\n                                    WA.nav.goToRoom(\"./notlog-fin\");\n                                } else {\n                                    WA.chat.sendChatMessage(\n                                        \"Schade, versuche es doch noch einmal mit meinem Recherchetipp! 🔍\",\n                                        \"Zirze\"\n                                    );\n                                }\n                            }\n                        },\n                        { scope: \"local\" }\n                    );\n                }\n            });\n\n            WA.room.area.onLeave(\"finalCodeTerminal\").subscribe(() => {\n                if (actionMessage) {\n                    actionMessage.remove();\n                }\n                WA.chat.close();\n            });\n        });\n    } else {\n        WA.room.area.onEnter(\"finalCodeTerminal\").subscribe(() => {\n            WA.chat.sendChatMessage(\n                \"Die Module sind noch nicht vollständig gelöst. Kehre später zurück.\",\n                \"Zirze\"\n            );\n        });\n    }\n});\n\n            \nWA.onInit().then(() => {\n    function updateRoomForSolved() {\n        const solvedModule2 = WA.player.state.module2 === '2';\n        const solvedModule3 = WA.player.state.module3 === '2';\n\n        // Both modules solved: recolor the entire map and send the full success message.\n        if (solvedModule2 && solvedModule3) {\n            const green: any[] = [];\n            const red: any[] = [];\n            for (let x = 0; x <= 47; x++) {\n                for (let y = 0; y <= 36; y++) {\n                    green.push({ x, y, tile: \"green\", layer: \"green\" });\n                    red.push({ x, y, tile: \"red\", layer: \"red\" });\n                }\n            }\n            // Combine the green and red tile changes in one call.\n            WA.room.setTiles([...green, ...red]);\n            WA.chat.sendChatMessage(\n                \"🌟 **Wow, das ging schnell!** 🌟 \\n\\n \\n\\nDu hast **beide Module gemeistert**. 💪 \\n\\n \\n\\nIch hoffe, du kannst dich noch an alle **Wortschnipsel**✂️  erinnern. Diese musst du nun in **richtiger Reihenfolge** im **Sicherheitsterminal** eingeben. 🔐 \\n\\n \\n\\nFalls du Hilfe brauchst, frag doch deine **Kolleg*innen**, ob ihr diese Aufgabe zusammen lösen könnt. 🤝👩‍💻👨‍💻 \\n\\n \\n\\nIch darf nicht zu viel verraten, aber eine **gezielte Recherche** könnte durchaus hilfreich sein. 🔍 \\n\\n \\n\\nWenn du oder ihr es schafft, können wir **Lord Modrevolt**💀 endlich aus unserem System entfernen und unsere **Sicherheitseinstellungen** des **Kondensatoriums** wieder herstellen. 🛡️🚀\",\n                \"Zirze\"\n            );\n        } \n        // Only module2 solved: send the message that encourages the user to continue.\n        else if (solvedModule2) {\n            WA.chat.sendChatMessage(\n                \"🎉 **Hervorragend, dich kann man gebrauchen!** 🎉 \\n\\n \\n\\nDu hast **Modul 2** gemeistert und schon einiges über  wissenschaftliches Arbeiten gelernt. 🧠📚 \\n\\n \\n\\nVergiss deine **Wortschnipsel** nicht, diese sind sehr wichtig! ✂️💡 \\n\\n \\n\\nDu bist nun bereit, mit **Modul 3** weiterzumachen, um mehr über das **wissenschaftliche Schreiben** zu erfahren. ✍️📖 \",\n                \"Zirze\"\n            );\n        }\n    }\n\n    // On Init, check if both module2 and module3 are solved.\n    if (WA.player.state.module2 === '2' && WA.player.state.module3 === '2') {\n        updateRoomForSolved();\n    }\n\n});\nexport {};\n\n"],"names":["bootstrapExtra","e","x","y","moving","material","checkPlayerMaterial","_a","mySound","_b","_c","playRandomSound","chatAreas","getChatAreas","area","triggerMessage","playerName","currentQuest","requiredQuest","quests","q","currentQuestId","createQuestBanner","newQuestId","newQuest","questId","quest","actionMessage","message","event","lowerMsg","resolve","levelUp","updateRoomForSolved","solvedModule2","solvedModule3","green","red"],"mappings":"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"}